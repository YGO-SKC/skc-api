
plugins {
	id 'io.spring.dependency-management' version '1.0.9.RELEASE' apply true
	id 'org.springframework.boot' version '2.2.5.RELEASE' apply true
	id 'jacoco' apply true
	id 'java' apply true
}

sourceSets.main.java.srcDirs = ["src/main/java"]



ext {
	baseName = 'YGO-API'

	springVersion = '2.2.5.RELEASE'
	swagger2Version = '2.9.2'
	javadocVersion = '3.1.1'
	cache2kVersion = '1.2.4.Final'
	lombokVersion = '1.18.12'
	mysqlVersion = '8.0.19'
}



group = 'com.rtomyj'
version = '1.1.2'
sourceCompatibility = '1.8'



repositories {
	mavenCentral()
}



sourceSets {
	build {
		java.srcDir file('src/main/java')
	}
}



dependencies {
	implementation "org.springframework.boot:spring-boot-starter-web:$springVersion"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springVersion"
	implementation "org.springframework.boot:spring-boot-starter-log4j2:$springVersion"

	implementation "org.springframework.boot:spring-boot-starter-jetty:$springVersion"
	implementation "org.eclipse.jetty:jetty-alpn-conscrypt-server"
	implementation "org.eclipse.jetty.http2:http2-server"

	implementation "org.apache.maven.plugins:maven-javadoc-plugin:$javadocVersion"

	implementation "io.springfox:springfox-swagger2:$swagger2Version"
	implementation "io.springfox:springfox-swagger-ui:$swagger2Version"

	runtimeOnly "mysql:mysql-connector-java:$mysqlVersion"

	implementation 'com.fasterxml.jackson.core:jackson-databind'

	implementation "org.cache2k:cache2k-api:$cache2kVersion"
	implementation "org.cache2k:cache2k-core:$cache2kVersion"

	annotationProcessor "org.projectlombok:lombok:$lombokVersion"	// needed to compile via gradle CLI
	implementation "org.projectlombok:lombok:$lombokVersion"	// plug in required to work in VSCode, might be the same for other IDE's


	testImplementation "org.springframework.boot:spring-boot-starter-test:$springVersion"
	testImplementation "com.h2database:h2"
}



configurations {
	implementation {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
		exclude module: 'spring-boot-starter-tomcat'
		exclude group: 'org.apache.tomcat'
	}
}



bootJar {
	group 'Build'
	description 'Creates a JAR file that can be executed to launch YGO service'

	baseName project.baseName
	manifest {
			attributes 'Implementation-Title': baseName
	}
}



task bootJarPath {
	doFirst {
		println "${buildDir}/libs/${project.baseName}-${project.version}.jar"
	}
}



javadoc {
	source = sourceSets.main.allJava
}



tasks.withType(Test) {
   maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}



test {
	useJUnitPlatform()

	minHeapSize = "256m"
	maxHeapSize = "512m"
}


jacocoTestReport {
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: 'com/rtomyj/yugiohAPI/dao/**')
		}))
	}
}