
plugins {
	id 'io.spring.dependency-management' version '1.0.9.RELEASE' apply true
	id 'org.springframework.boot' version '2.2.5.RELEASE' apply true
	id 'jacoco' apply true
	id 'java' apply true
}



ext {
	baseName = 'Yugioh_API'

	springVersion = '2.2.5.RELEASE'
	swagger2Version = '2.9.2'
	javadocVersion = '3.1.1'
	cache2kVersion = '1.2.4.Final'
	lombokVersion = '1.18.12'
	mysqlVersion = '8.0.19'
}



group 'com.rtomyj'
version '1.2.0'
sourceCompatibility = '1.8'



repositories {
	mavenCentral()
}



sourceSets {
	build {
		java.srcDir file('src/main/java')
	}
}



dependencies {
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springVersion
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: springVersion
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: springVersion
	testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springVersion

	implementation group: 'org.apache.maven.plugins', name: 'maven-javadoc-plugin', version: javadocVersion

	implementation group: 'io.springfox', name: 'springfox-swagger2', version: swagger2Version
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: swagger2Version

	runtimeOnly group: 'mysql', name: 'mysql-connector-java', version: mysqlVersion

	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind'

	implementation group: 'org.cache2k', name: 'cache2k-api', version: cache2kVersion
	implementation group: 'org.cache2k', name: 'cache2k-core', version: cache2kVersion

	annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion	// needed to compile via gradle CLI
	implementation group: 'org.projectlombok', name: 'lombok', version: lombokVersion	// plug in required to work in VSCode, might be the same for other IDE's
}



configurations {
	implementation {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}



bootJar {
	group 'Build'
	description 'Creates a JAR file that can be executed to launch YGO service'

	baseName 'Yugioh_API'
	manifest {
			attributes 'Implementation-Title': baseName
	}
}



task bootJarName {
	print project.baseName + '-' + version + '.jar'
}



task createJavadocs(type: Javadoc) {
	group 'Documentation'
	description 'Creates custom Javadocs for project'

	source 'sourceSets.main.allJava'
}



tasks.withType(Test) {
   maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}